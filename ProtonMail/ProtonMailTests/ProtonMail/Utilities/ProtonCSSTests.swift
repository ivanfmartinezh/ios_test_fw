// Copyright (c) 2022 Proton Technologies AG
//
// This file is part of Proton Mail.
//
// Proton Mail is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Proton Mail is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Proton Mail. If not, see https://www.gnu.org/licenses/.

import XCTest
@testable import ProtonMail

final class ProtonCSSTests: XCTestCase {

    func testViewer() throws {
        let css = try ProtonCSS.viewer.content()
        let target = """
:root {  color-scheme: light dark;  --text-color: #0C0C14;  --bg-color: #FFFFFF;  --brand-color: #6D4AFF;  --screen-width: {{screen-width}};}@media screen and (prefers-color-scheme: dark) {  :root {      --text-color: #FFFFFF;      --bg-color: #1C1B24;      --brand-color: #6D4AFF;  }  a:link { color: var(--brand-color); }}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary {    display: block;}audio,canvas,video {    display: inline-block;}audio:not([controls]) {    display: none;    height: 0;}[hidden] {    display: none;}html {    font-size: 100%;}button,html,input,select,textarea {    font-family: -apple-system,sans-serif;}body {    font-family: -apple-system,Helvetica,Arial,sans-serif;    font-weight: 400;    margin: 0;    width: 100%;    box-sizing: border-box;    padding: 1rem;    color: var(--text-color);    background: var(--bg-color);    /* outside of tables we force wrap long text */    word-break: break-word;}table * {    /* inside of tables we use detault wrapping for best formatting (such as Amazon reciept emails) */    word-break: initial;}table a, table p {    word-break: break-word;}blockquote {    padding: 0 0 0 0.6rem !important;    margin: 0 !important;    border: 1px solid #ccc !important;    border-width: 0 0 0 1px !important;    -webkit-margin-before: 1rem !important;    -webkit-margin-after: 2rem !important;    -webkit-margin-start: 0 !important;    -webkit-margin-end: 0 !important;}blockquote blockquote blockquote {    padding: 0 !important;    border: none !important;}a:focus {    outline: dotted thin;}a:active,a:hover {    outline: 0;}h1 {    font-size: 2em;    margin: .67em 0;}h2 {    font-size: 1.5em;    margin: .83em 0;}h3 {    font-size: 1.17em;    margin: 1em 0;}h4 {    font-size: 1em;    margin: 1.33em 0;}h5 {    font-size: .83em;    margin: 1.67em 0;}h6 {    font-size: .75em;    margin: 2.33em 0;}h1, h2, h3, h4, h5, h6 {    line-height: 120%;}abbr[title] {    border-bottom: 1px dotted;}b,strong {    font-weight: 700;}dfn {    font-style: italic;}mark {    background: #ff0;    color: #000;}p,pre {    margin: 1em 0;}code,kbd,pre,samp {    font-family: monospace,serif;    font-size: 1em;}pre {    white-space: pre;    white-space: pre-wrap;    word-wrap: break-word;}* {    caret-color: red !important;        /* debug only */        /* margin: 0 !important;        position: static !important;        float: none !important; */    /* end debug */}q {    quotes: none;}q:after,q:before {    content: none;}small {    font-size: 80%;}sub,sup {    font-size: 75%;    line-height: 0;    position: relative;    vertical-align: baseline;}sup {    top: -.5em;}sub {    bottom: -.25em;}dl,menu,ol,ul {    margin: 1em 0;}dd {    margin: 0 0 0 40px;}menu,ol,ul {    padding: 0 0 0 40px;}nav ol,nav ul {    list-style: none;}img {    border: 0;    -ms-interpolation-mode: bicubic;    /* will prevent embed image improper sizing */    /*    height: auto; remove it if test ok*/}/*img tag, doesn't have width attribute and style contains width*//*img tag, has width attribute*/img:not([width], [style*='width']),img[width] {    max-width: var(--screen-width);    height: initial;}/*img tag, doesn't have width attribute and style doesn't have width*/img:not([width], [style^='width'])[src] {    max-width: 100%;}/*img.proton-embedded {*//*    height: auto;*//*}*/td {    max-width: 100%;}table {    /* Some html newsletters set up inline style for tables to take 100% of height and then add footer contents like Unsubscribe button and credits. This practice breaks MessageBodyViewController layout: webView does not include footer into contentSize because consider it to be scrollable. No matter what, webView will place footer below the bottomline of the view in order to make users scroll for it. Since we do not want webViews to be scrollable (in order to support conversation mode), we have to override this styling practice and let table take as much space as its content really needs and place the footer just below. */    height: auto !important;    min-height: auto !important;}svg:not(:root) {    overflow: hidden;}figure,form {    margin: 0;}fieldset {    border: 1px solid silver;    margin: 0 2px;    padding: .35em .625em .75em;}legend {    border: 0;    padding: 0;    white-space: normal;}.pm_font_larger {    font-size: 1.8em;}*[style*="min-height"] {    min-height: initial !important;}
"""
        XCTAssertEqual(css.trim(), target)
    }

    func testViewerLight() throws {
        let css = try ProtonCSS.viewerLightOnly.content()
        let target = """
:root {  --brand-color: #6D4AFF;  --screen-width: {{screen-width}};}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary {    display: block;}audio,canvas,video {    display: inline-block;}audio:not([controls]) {    display: none;    height: 0;}[hidden] {    display: none;}html {    font-size: 100%;}button,html,input,select,textarea {    font-family: -apple-system,sans-serif;}body {    font-family: -apple-system,Helvetica,Arial,sans-serif;    font-weight: 400;    margin: 0;    width: 100%;    box-sizing: border-box;    padding: 1rem;    /* outside of tables we force wrap long text */    word-break: break-word;    background-color: white;}table * {    /* inside of tables we use detault wrapping for best formatting (such as Amazon reciept emails) */    word-break: initial;}table a, table p {    word-break: break-word;}blockquote {    padding: 0 0 0 0.6rem !important;    margin: 0 !important;    border: 1px solid #ccc !important;    border-width: 0 0 0 1px !important;    -webkit-margin-before: 1rem !important;    -webkit-margin-after: 2rem !important;    -webkit-margin-start: 0 !important;    -webkit-margin-end: 0 !important;}blockquote blockquote blockquote {    padding: 0 !important;    border: none !important;}a:focus {    outline: dotted thin;}a:active,a:hover {    outline: 0;}a:link {    color: var(--brand-color);}h1 {    font-size: 2em;    margin: .67em 0;}h2 {    font-size: 1.5em;    margin: .83em 0;}h3 {    font-size: 1.17em;    margin: 1em 0;}h4 {    font-size: 1em;    margin: 1.33em 0;}h5 {    font-size: .83em;    margin: 1.67em 0;}h6 {    font-size: .75em;    margin: 2.33em 0;}h1, h2, h3, h4, h5, h6 {    line-height: 120%;}abbr[title] {    border-bottom: 1px dotted;}b,strong {    font-weight: 700;}dfn {    font-style: italic;}mark {    background: #ff0;    color: #000;}p,pre {    margin: 1em 0;}code,kbd,pre,samp {    font-family: monospace,serif;    font-size: 1em;}pre {    white-space: pre;    white-space: pre-wrap;    word-wrap: break-word;}* {    caret-color: red !important;        /* debug only */        /* margin: 0 !important;        position: static !important;        float: none !important; */    /* end debug */}q {    quotes: none;}q:after,q:before {    content: none;}small {    font-size: 80%;}sub,sup {    font-size: 75%;    line-height: 0;    position: relative;    vertical-align: baseline;}sup {    top: -.5em;}sub {    bottom: -.25em;}dl,menu,ol,ul {    margin: 1em 0;}dd {    margin: 0 0 0 40px;}menu,ol,ul {    padding: 0 0 0 40px;}nav ol,nav ul {    list-style: none;}img {    border: 0;    -ms-interpolation-mode: bicubic;    /* will prevent embed image improper sizing */    /*    height: auto; remove it if test ok*/}/*img tag, doesn't have width attribute and style contains width*//*img tag, has width attribute*/img:not([width], [style*='width']),img[width] {    max-width: var(--screen-width);    height: initial;}/*img tag, doesn't have width attribute and style doesn't have width*/img:not([width], [style^='width'])[src] {    max-width: 100%;}/*img.proton-embedded {*//*    height: auto;*//*}*/td {    max-width: 100%;}table {    /* Some html newsletters set up inline style for tables to take 100% of height and then add footer contents like Unsubscribe button and credits. This practice breaks MessageBodyViewController layout: webView does not include footer into contentSize because consider it to be scrollable. No matter what, webView will place footer below the bottomline of the view in order to make users scroll for it. Since we do not want webViews to be scrollable (in order to support conversation mode), we have to override this styling practice and let table take as much space as its content really needs and place the footer just below. */    height: auto !important;    min-height: auto !important;}svg:not(:root) {    overflow: hidden;}figure,form {    margin: 0;}fieldset {    border: 1px solid silver;    margin: 0 2px;    padding: .35em .625em .75em;}legend {    border: 0;    padding: 0;    white-space: normal;}.pm_font_larger {    font-size: 1.8em;}*[style*="min-height"] {    min-height: initial !important;}
"""
        XCTAssertEqual(css.trim(), target)
    }

    func testHTMLEditor() throws {
        let css = try ProtonCSS.htmlEditor.content()
        let n = css.trim()
        let target = """
/*    HtmlEditor.css    Proton AG*/:root {  color-scheme: light dark;  --text-color: #0C0C14;  --bg-color: #FFFFFF;  --brand-color: #6D4AFF;}@media screen and (prefers-color-scheme: dark) {  :root {      --text-color: #FFFFFF;      --bg-color: #1C1B24;      --brand-color: #6D4AFF  }  a:link { color: var(--brand-color); }}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary {    display: block;}audio,canvas,video {    display: inline-block;}audio:not([controls]) {    display: none;    height: 0;}[hidden] {    display: none;}html {    font-size: 100%;}button,html,input,select,textarea {    font-family: "San Francisco",sans-serif;}body {    font-family: "San Francisco",Helvetica,Arial,sans-serif;    font-weight: 400;    margin: 0;    width: 100%;    height: 100%;    box-sizing: border-box;    padding: 0rem;    word-break: break-word;    color: var(--text-color);    background: var(--bg-color);}/*div,*//*span {*//*    font-size: 1em !important;*//*}*/div {    outline: none}blockquote {    padding: 0 0 0 0.6rem !important;    margin: 0 !important;    border: 1px solid #ccc !important;    border-width: 0 0 0 1px !important;    -webkit-margin-before: 1rem !important;    -webkit-margin-after: 20px !important;    -webkit-margin-start: 0 !important;    -webkit-margin-end: 0 !important;}blockquote blockquote blockquote {    padding: 0 !important;    border: none !important;}a:focus {    outline: dotted thin;}a:active,a:hover {    outline: 0;}a:link {    color: var(--brand-color);}h1 {    font-size: 2em;    margin: .67em 0;}h2 {    font-size: 1.5em;    margin: .83em 0;}h3 {    font-size: 1.17em;    margin: 1em 0;}h4 {    font-size: 1em;    margin: 1.33em 0;}h5 {    font-size: .83em;    margin: 1.67em 0;}h6 {    font-size: .75em;    margin: 2.33em 0;}h1, h2, h3, h4, h5, h6 {    line-height: 120%;}abbr[title] {    border-bottom: 1px dotted;}b,strong {    font-weight: 700;}dfn {    font-style: italic;}mark {    background: #ff0;    color: #000;}p,pre {    margin: 1em 0;}code,kbd,pre,samp {    font-family: monospace,serif;    font-size: 1em;}pre {    white-space: pre;    white-space: pre-wrap;    word-wrap: break-word;}* {    caret-color: auto !important;    unicode-bidi: plaintext;    /* debug only *//*    margin: 0 !important;*//*    position: static !important;*//*    float: none !important;*/    /* end debug */}q {    quotes: none;}q:after,q:before {    content: "";    content: none;}small {    font-size: 80%;}sub,sup {    font-size: 75%;    line-height: 0;    position: relative;    vertical-align: baseline;}sup {    top: -.5em;}sub {    bottom: -.25em;}dl,menu,ol,ul {    margin: 1em 0;}dd {    margin: 0 0 0 40px;}menu,ol,ul {    padding: 0 0 0 40px;}nav ol,nav ul {    list-style: none;}img {    border: 0;    -ms-interpolation-mode: bicubic;    max-width: 100%;    height: auto; /* will prevent embed image improper sizing */}td {    max-width: 100%;}table {    /* Some html newsletters set up inline style for tables to take 100% of height and then add footer contents like Unsubscribe button and credits. This practice breaks MessageBodyViewController layout: webView does not include footer into contentSize because consider it to be scrollable. No matter what, webView will place footer below the bottomline of the view in order to make users scroll for it. Since we do not want webViews to be scrollable (in order to support conversation mode), we have to override this styling practice and let table take as much space as its content really needs and place the footer just below. */    height: auto !important;}svg:not(:root) {    overflow: hidden;}figure,form {    margin: 0;}fieldset {    border: 1px solid silver;    margin: 0 2px;    padding: .35em .625em .75em;}legend {    border: 0;    padding: 0;    white-space: normal;}.pm_font_larger {    font-size: 1.8em;}body > #editor {    /*  temp solve the click range too small when no signature  */    min-height: 60px;}#editor > #protonmail_mobile_signature_block {    min-height: 40px;}
"""
        XCTAssertEqual(css.trim(), target)
    }
}
